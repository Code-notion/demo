{"ast":null,"code":"/// <reference lib=\"webworker\" />\nimport{clientsClaim}from\"workbox-core\";import{ExpirationPlugin}from\"workbox-expiration\";import{precacheAndRoute,createHandlerBoundToURL}from\"workbox-precaching\";import{registerRoute}from\"workbox-routing\";import{StaleWhileRevalidate}from\"workbox-strategies\";clientsClaim();precacheAndRoute(self.__WB_MANIFEST);var fileExtensionRegexp=new RegExp(\"/[^/?]+\\\\.[^/]+$\");registerRoute(function(_ref){var request=_ref.request,url=_ref.url;if(request.mode!==\"navigate\"){return false;}if(url.pathname.startsWith(\"/_\")){return false;}if(url.pathname.match(fileExtensionRegexp)){return false;}return true;},createHandlerBoundToURL(process.env.PUBLIC_URL+\"/index.html\"));registerRoute(function(_ref2){var url=_ref2.url;return url.origin===self.location.origin&&url.pathname.endsWith(\".png\");},// Customize this strategy as needed, e.g., by changing to CacheFirst.\nnew StaleWhileRevalidate({cacheName:\"images\",plugins:[new ExpirationPlugin({maxEntries:50})]}));self.addEventListener(\"message\",function(event){if(event.data&&event.data.type===\"SKIP_WAITING\"){self.skipWaiting();}});","map":{"version":3,"names":["clientsClaim","ExpirationPlugin","precacheAndRoute","createHandlerBoundToURL","registerRoute","StaleWhileRevalidate","self","__WB_MANIFEST","fileExtensionRegexp","RegExp","request","url","mode","pathname","startsWith","match","process","env","PUBLIC_URL","origin","location","endsWith","cacheName","plugins","maxEntries","addEventListener","event","data","type","skipWaiting"],"sources":["/Users/samratmallick/Downloads/project/demo-app/src/service-worker.ts"],"sourcesContent":["/// <reference lib=\"webworker\" />\n\nimport { clientsClaim } from \"workbox-core\";\nimport { ExpirationPlugin } from \"workbox-expiration\";\nimport { precacheAndRoute, createHandlerBoundToURL } from \"workbox-precaching\";\nimport { registerRoute } from \"workbox-routing\";\nimport { StaleWhileRevalidate } from \"workbox-strategies\";\ndeclare const self: ServiceWorkerGlobalScope;\nclientsClaim();\nprecacheAndRoute(self.__WB_MANIFEST);\nconst fileExtensionRegexp = new RegExp(\"/[^/?]+\\\\.[^/]+$\");\nregisterRoute(({ request, url }: { request: Request; url: URL }) => {\n  if (request.mode !== \"navigate\") {\n    return false;\n  }\n  if (url.pathname.startsWith(\"/_\")) {\n    return false;\n  }\n  if (url.pathname.match(fileExtensionRegexp)) {\n    return false;\n  }\n  return true;\n}, createHandlerBoundToURL(process.env.PUBLIC_URL + \"/index.html\"));\nregisterRoute(\n  ({ url }) =>\n    url.origin === self.location.origin && url.pathname.endsWith(\".png\"),\n  // Customize this strategy as needed, e.g., by changing to CacheFirst.\n  new StaleWhileRevalidate({\n    cacheName: \"images\",\n    plugins: [new ExpirationPlugin({ maxEntries: 50 })],\n  })\n);\n\nself.addEventListener(\"message\", (event) => {\n  if (event.data && event.data.type === \"SKIP_WAITING\") {\n    self.skipWaiting();\n  }\n});\n"],"mappings":"AAAA;AAEA,OAASA,YAAT,KAA6B,cAA7B,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,gBAAT,CAA2BC,uBAA3B,KAA0D,oBAA1D,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,oBAAT,KAAqC,oBAArC,CAEAL,YAAY,GACZE,gBAAgB,CAACI,IAAI,CAACC,aAAN,CAAhB,CACA,GAAMC,oBAAmB,CAAG,GAAIC,OAAJ,CAAW,kBAAX,CAA5B,CACAL,aAAa,CAAC,cAAsD,IAAnDM,QAAmD,MAAnDA,OAAmD,CAA1CC,GAA0C,MAA1CA,GAA0C,CAClE,GAAID,OAAO,CAACE,IAAR,GAAiB,UAArB,CAAiC,CAC/B,MAAO,MAAP,CACD,CACD,GAAID,GAAG,CAACE,QAAJ,CAAaC,UAAb,CAAwB,IAAxB,CAAJ,CAAmC,CACjC,MAAO,MAAP,CACD,CACD,GAAIH,GAAG,CAACE,QAAJ,CAAaE,KAAb,CAAmBP,mBAAnB,CAAJ,CAA6C,CAC3C,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,CAXY,CAWVL,uBAAuB,CAACa,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyB,aAA1B,CAXb,CAAb,CAYAd,aAAa,CACX,mBAAGO,IAAH,OAAGA,GAAH,OACEA,IAAG,CAACQ,MAAJ,GAAeb,IAAI,CAACc,QAAL,CAAcD,MAA7B,EAAuCR,GAAG,CAACE,QAAJ,CAAaQ,QAAb,CAAsB,MAAtB,CADzC,EADW,CAGX;AACA,GAAIhB,qBAAJ,CAAyB,CACvBiB,SAAS,CAAE,QADY,CAEvBC,OAAO,CAAE,CAAC,GAAItB,iBAAJ,CAAqB,CAAEuB,UAAU,CAAE,EAAd,CAArB,CAAD,CAFc,CAAzB,CAJW,CAAb,CAUAlB,IAAI,CAACmB,gBAAL,CAAsB,SAAtB,CAAiC,SAACC,KAAD,CAAW,CAC1C,GAAIA,KAAK,CAACC,IAAN,EAAcD,KAAK,CAACC,IAAN,CAAWC,IAAX,GAAoB,cAAtC,CAAsD,CACpDtB,IAAI,CAACuB,WAAL,GACD,CACF,CAJD"},"metadata":{},"sourceType":"module"}