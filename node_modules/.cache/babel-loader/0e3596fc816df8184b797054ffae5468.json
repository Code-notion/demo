{"ast":null,"code":"var _jsxFileName = \"/Users/samratmallick/Downloads/project/demo-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [address, setAddress] = useState(null);\n  const [isShownAddress, setIsShownAddress] = useState(false);\n\n  const getLocation = () => {\n    var geoOps = {\n      enableHighAccuracy: true,\n      timeout: 10000 //10 seconds\n\n    };\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback, geoOps);\n  };\n\n  const successCallback = pos => {\n    var _lat = pos.coords.latitude;\n    var _long = pos.coords.longitude;\n    const options = {\n      method: 'GET'\n    };\n    fetch(`https://api.opencagedata.com/geocode/v1/json?key=bb08e60798df43eab80b248880e02f7b&q=${_lat}%2C${_long}&pretty=1`, options).then(response => response.json()).then(response => {\n      var _response$results$;\n\n      return setAddress(response === null || response === void 0 ? void 0 : (_response$results$ = response.results[0]) === null || _response$results$ === void 0 ? void 0 : _response$results$.components);\n    }).catch(err => console.error(err));\n    setLat(_lat);\n    setLong(_long);\n    setIsShownAddress(true);\n  };\n\n  const errorCallback = e => {\n    console.log(\"error\", e);\n  };\n\n  console.log(\"mama\", address);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => isShownAddress ? setIsShownAddress(false) : getLocation(),\n      children: [isShownAddress ? \"Hide\" : \"Show\", \" Location\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isShownAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You are currnetly at Lat: \", lat, \" , Long: \", long]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5D48E73tttrHp/g3P1HCThK6Dgk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","lat","setLat","long","setLong","address","setAddress","isShownAddress","setIsShownAddress","getLocation","geoOps","enableHighAccuracy","timeout","navigator","geolocation","getCurrentPosition","successCallback","errorCallback","pos","_lat","coords","latitude","_long","longitude","options","method","fetch","then","response","json","results","components","catch","err","console","error","e","log"],"sources":["/Users/samratmallick/Downloads/project/demo-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [address, setAddress] = useState(null);\n  const [isShownAddress, setIsShownAddress] = useState(false);\n  const getLocation = () => {\n    var geoOps = {\n      enableHighAccuracy: true,\n      timeout: 10000 //10 seconds\n    }\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback, geoOps);\n  }\n  const successCallback = (pos: any) => {\n    var _lat = pos.coords.latitude;\n    var _long = pos.coords.longitude;\n    const options = {\n      method: 'GET',\n    };\n    fetch(`https://api.opencagedata.com/geocode/v1/json?key=bb08e60798df43eab80b248880e02f7b&q=${_lat}%2C${_long}&pretty=1`, options)\n      .then(response => response.json())\n      .then(response => setAddress(response?.results[0]?.components))\n      .catch(err => console.error(err));\n    setLat(_lat);\n    setLong(_long);\n    setIsShownAddress(true);\n  }\n  const errorCallback = (e: any) => {\n    console.log(\"error\", e)\n  }\n  console.log(\"mama\", address)\n  return (\n    <div className=\"App\">\n      <button onClick={() => isShownAddress ? setIsShownAddress(false) : getLocation()}>{isShownAddress ? \"Hide\" : \"Show\"} Location</button>\n      {\n        isShownAddress && <p>You are currnetly at Lat: {lat} , Long: {long}</p>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAApD;;EACA,MAAMU,WAAW,GAAG,MAAM;IACxB,IAAIC,MAAM,GAAG;MACXC,kBAAkB,EAAE,IADT;MAEXC,OAAO,EAAE,KAFE,CAEI;;IAFJ,CAAb;IAIAC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,eAAzC,EAA0DC,aAA1D,EAAyEP,MAAzE;EACD,CAND;;EAOA,MAAMM,eAAe,GAAIE,GAAD,IAAc;IACpC,IAAIC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,QAAtB;IACA,IAAIC,KAAK,GAAGJ,GAAG,CAACE,MAAJ,CAAWG,SAAvB;IACA,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE;IADM,CAAhB;IAGAC,KAAK,CAAE,uFAAsFP,IAAK,MAAKG,KAAM,WAAxG,EAAoHE,OAApH,CAAL,CACGG,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQC,QAAQ;MAAA;;MAAA,OAAItB,UAAU,CAACsB,QAAD,aAACA,QAAD,6CAACA,QAAQ,CAAEE,OAAV,CAAkB,CAAlB,CAAD,uDAAC,mBAAsBC,UAAvB,CAAd;IAAA,CAFhB,EAGGC,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHhB;IAIA/B,MAAM,CAACiB,IAAD,CAAN;IACAf,OAAO,CAACkB,KAAD,CAAP;IACAd,iBAAiB,CAAC,IAAD,CAAjB;EACD,CAbD;;EAcA,MAAMS,aAAa,GAAImB,CAAD,IAAY;IAChCF,OAAO,CAACG,GAAR,CAAY,OAAZ,EAAqBD,CAArB;EACD,CAFD;;EAGAF,OAAO,CAACG,GAAR,CAAY,MAAZ,EAAoBhC,OAApB;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAME,cAAc,GAAGC,iBAAiB,CAAC,KAAD,CAApB,GAA8BC,WAAW,EAA9E;MAAA,WAAmFF,cAAc,GAAG,MAAH,GAAY,MAA7G;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAGIA,cAAc,iBAAI;MAAA,yCAA8BN,GAA9B,eAA4CE,IAA5C;IAAA;MAAA;MAAA;MAAA;IAAA,QAHtB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAtCQH,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}