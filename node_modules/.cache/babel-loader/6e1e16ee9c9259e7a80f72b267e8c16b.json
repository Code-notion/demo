{"ast":null,"code":"var _jsxFileName = \"/Users/samratmallick/Downloads/project/demo-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [isShownAddress, setIsShownAddress] = useState(false);\n\n  const getLocation = () => {\n    var geoOps = {\n      enableHighAccuracy: true,\n      timeout: 10000 //10 seconds\n\n    };\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback, geoOps);\n  };\n\n  const successCallback = pos => {\n    var _lat = pos.coords.latitude;\n    var _long = pos.coords.longitude;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '392e6f944bmsh18e0648b1ae6125p139352jsn9a99321fb244',\n        'X-RapidAPI-Host': 'google-maps-geocoding.p.rapidapi.com'\n      }\n    };\n    fetch(`https://google-maps-geocoding.p.rapidapi.com/geocode/json?latlng=${_lat}%2C${long}&language=en`, options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n    setLat(_lat);\n    setLong(_long);\n    setIsShownAddress(true);\n  };\n\n  const errorCallback = e => {\n    console.log(\"error\", e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => isShownAddress ? setIsShownAddress(false) : getLocation(),\n      children: [isShownAddress ? \"Hide\" : \"Show\", \" Location\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isShownAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You are currnetly at Lat: \", lat, \" , Long: \", long]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"S7HOzagGGfcA8Cg41BacyP2ca5Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","lat","setLat","long","setLong","isShownAddress","setIsShownAddress","getLocation","geoOps","enableHighAccuracy","timeout","navigator","geolocation","getCurrentPosition","successCallback","errorCallback","pos","_lat","coords","latitude","_long","longitude","options","method","headers","fetch","then","response","json","console","log","catch","err","error","e"],"sources":["/Users/samratmallick/Downloads/project/demo-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [isShownAddress, setIsShownAddress] = useState(false);\n  const getLocation = () => {\n    var geoOps = {\n      enableHighAccuracy: true,\n      timeout: 10000 //10 seconds\n    }\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback, geoOps);\n  }\n  const successCallback = (pos: any) => {\n    var _lat = pos.coords.latitude;\n    var _long = pos.coords.longitude;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '392e6f944bmsh18e0648b1ae6125p139352jsn9a99321fb244',\n        'X-RapidAPI-Host': 'google-maps-geocoding.p.rapidapi.com'\n      }\n    };\n    fetch(`https://google-maps-geocoding.p.rapidapi.com/geocode/json?latlng=${_lat}%2C${long}&language=en`, options)\n      .then(response => response.json())\n      .then(response => console.log(response))\n      .catch(err => console.error(err));\n    setLat(_lat);\n    setLong(_long);\n    setIsShownAddress(true);\n  }\n  const errorCallback = (e: any) => {\n    console.log(\"error\", e)\n  }\n  return (\n    <div className=\"App\">\n      <button onClick={() => isShownAddress ? setIsShownAddress(false) : getLocation()}>{isShownAddress ? \"Hide\" : \"Show\"} Location</button>\n      {\n        isShownAddress && <p>You are currnetly at Lat: {lat} , Long: {long}</p>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;;EACA,MAAMQ,WAAW,GAAG,MAAM;IACxB,IAAIC,MAAM,GAAG;MACXC,kBAAkB,EAAE,IADT;MAEXC,OAAO,EAAE,KAFE,CAEI;;IAFJ,CAAb;IAIAC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,eAAzC,EAA0DC,aAA1D,EAAyEP,MAAzE;EACD,CAND;;EAOA,MAAMM,eAAe,GAAIE,GAAD,IAAc;IACpC,IAAIC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,QAAtB;IACA,IAAIC,KAAK,GAAGJ,GAAG,CAACE,MAAJ,CAAWG,SAAvB;IACA,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,KADM;MAEdC,OAAO,EAAE;QACP,kBAAkB,oDADX;QAEP,mBAAmB;MAFZ;IAFK,CAAhB;IAOAC,KAAK,CAAE,oEAAmER,IAAK,MAAKd,IAAK,cAApF,EAAmGmB,OAAnG,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQC,QAAQ,IAAIE,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAFpB,EAGGI,KAHH,CAGSC,GAAG,IAAIH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAHhB;IAIA9B,MAAM,CAACe,IAAD,CAAN;IACAb,OAAO,CAACgB,KAAD,CAAP;IACAd,iBAAiB,CAAC,IAAD,CAAjB;EACD,CAjBD;;EAkBA,MAAMS,aAAa,GAAImB,CAAD,IAAY;IAChCL,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,CAArB;EACD,CAFD;;EAGA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAM7B,cAAc,GAAGC,iBAAiB,CAAC,KAAD,CAApB,GAA8BC,WAAW,EAA9E;MAAA,WAAmFF,cAAc,GAAG,MAAH,GAAY,MAA7G;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAGIA,cAAc,iBAAI;MAAA,yCAA8BJ,GAA9B,eAA4CE,IAA5C;IAAA;MAAA;MAAA;MAAA;IAAA,QAHtB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAxCQH,G;;KAAAA,G;AA0CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}